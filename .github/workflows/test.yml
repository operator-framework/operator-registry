name: test
on:
  push:
    branches:
      - '**'
  pull_request:
    paths:
      - '**'
      - '!doc/**'
jobs:
  markdown-link-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-quiet-mode: 'true'
        config-file: 'mlc_config.json'

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: make build
  unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: make unit
      - run: sed -i'' "s:^github.com/$GITHUB_REPOSITORY/::" coverage.out
      - uses: codecov/codecov-action@v1
        with:
          file: coverage.out
          fail_ci_if_error: false
  e2e-minikube:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: |
          sudo apt-get update \
            && sudo apt-get remove buildah podman -y \
            && sudo apt-get autoremove -y \
            && sudo apt-get upgrade \
            && sudo apt-get install podman dbus-x11 conntrack -y \
            && podman version
      - run: |
          curl -sLo minikube "$(curl -sL https://api.github.com/repos/kubernetes/minikube/releases/latest | jq -r '[.assets[] | select(.name == "minikube-linux-amd64")] | first | .browser_download_url')"
          chmod +x minikube
          sudo mv minikube /bin/
          minikube start --driver=none
          sudo chown -R "$USER" "$HOME/.kube" "$HOME/.minikube"
          sudo usermod -aG docker "$USER"
          eval $(minikube docker-env)
      - run: |
          mkdir -p certs
          openssl req -x509 -newkey rsa:4096 -keyout certs/key.pem -out certs/cert.pem -days 365 -subj '/CN=localhost' -nodes -addext 'subjectAltName = DNS:localhost'
          docker run -d --restart=always --name registry -v "$(pwd)"/certs:/certs -e REGISTRY_HTTP_ADDR=0.0.0.0:443 -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/cert.pem \
                      -e REGISTRY_HTTP_TLS_KEY=/certs/key.pem \
                      -p 443:443 \
                      registry:2
          sudo mkdir /etc/docker/certs.d
          sudo mkdir /etc/docker/certs.d/localhost:443
          sudo cp certs/cert.pem /etc/docker/certs.d/localhost:443/ca.crt
          sudo cp certs/cert.pem /usr/local/share/ca-certificates/ca.crt
          sudo update-ca-certificates
          export DOCKER_REGISTRY_HOST=localhost:443
      - run: |
          KUBECONFIG="$HOME/.kube/config" DOCKER_REGISTRY_HOST=localhost:443 make build e2e

  e2e-kind:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - run: |
          sudo apt-get update \
            && sudo apt-get remove buildah podman -y \
            && sudo apt-get autoremove -y \
            && sudo apt-get upgrade \
            && sudo apt-get -y install podman dbus-x11 \
            && podman version
      - run: |
          curl -sLo kind "$(curl -sL https://api.github.com/repos/kubernetes-sigs/kind/releases/latest | jq -r '[.assets[] | select(.name == "kind-linux-amd64")] | first | .browser_download_url')"
          chmod +x kind
          sudo mv kind /bin/
      - run: |
          kind create cluster
          kind export kubeconfig
          sudo chown -R "$USER" "$HOME/.kube"
          sudo usermod -aG docker "$USER"
      - run: |
          mkdir -p certs
          openssl req -x509 -newkey rsa:4096 -keyout certs/key.pem -out certs/cert.pem -days 365 -subj '/CN=localhost' -nodes -addext 'subjectAltName = DNS:localhost'
          docker run -d --restart=always --name registry -v "$(pwd)"/certs:/certs -e REGISTRY_HTTP_ADDR=0.0.0.0:443 -e REGISTRY_HTTP_TLS_CERTIFICATE=/certs/cert.pem \
                      -e REGISTRY_HTTP_TLS_KEY=/certs/key.pem \
                      -p 443:443 \
                      registry:2
          sudo mkdir /etc/docker/certs.d
          sudo mkdir /etc/docker/certs.d/localhost:443
          sudo cp certs/cert.pem /etc/docker/certs.d/localhost:443/ca.crt
          sudo cp certs/cert.pem /usr/local/share/ca-certificates/ca.crt
          sudo update-ca-certificates
          export DOCKER_REGISTRY_HOST=localhost:443
      - run: |
          KUBECONFIG="$HOME/.kube/config" DOCKER_REGISTRY_HOST=localhost:443 make build e2e
